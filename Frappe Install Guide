
########################################################
#####################  NOTE  ###########################
########################################################
ubuntu 24.04 default python version is python3.12

ubuntu 24.04 default mariadb version is 10.11



########################################################
#####################  SUDO  ###########################
########################################################
Note: if any missing values try:
        sudo apt-get update --fix-missing

sudo apt-get install git python3-dev python3-setuptools python3-pip python3.12-venv

STEP 0 : update & upgrade all liberary
        sudo apt update && sudo apt upgrade -y


STEP 1 : Install git & ansible (if ansible required, mostly used for press)
        sudo apt-get install git ansible -y

STEP 2 : install python
        sudo apt-get python3-dev python3-setuptools python3-pip python3.12-venv -y
        ///// or /////
        sudo apt install python3-dev python3-setuptools python3-pip python3.12-venv -y

STEP 3 : Install MariaDB
        sudo apt-get install software-properties-common -y
        sudo apt install mariadb-server -y
        sudo systemctl status mariadb
        sudo mysql_secure_installation
        """
In order to log into MariaDB to secure it, we'll need the current
password for the root user. If you've just installed MariaDB, and
haven't set the root password yet, you should just press enter here.

Enter current password for root (enter for none): # PRESS ENTER
OK, successfully used password, moving on...


Switch to unix_socket authentication [Y/n] Y
Enabled successfully!
Reloading privilege tables..
... Success!

Change the root password? [Y/n] Y
New password: 123
Re-enter new password: 123
Password updated successfully!
Reloading privilege tables..
... Success!

Remove anonymous users? [Y/n] Y
... Success!

Disallow root login remotely? [Y/n] Y
... Success!

Remove test database and access to it? [Y/n] Y
- Dropping test database...
... Success!
- Removing privileges on test database...
... Success!

Reload privilege tables now? [Y/n] Y
... Success!
Cleaning up...

All done!  If you've completed all of the above steps, your MariaDB
installation should now be secure.

Thanks for using MariaDB!
        """
STEP 4 :  MySQL database development files
        sudo apt-get install libmysqlclient-dev -y

STEP 5 : Edit the mariadb configuration ( unicode character encoding )
        sudo nano /etc/mysql/mariadb.conf.d/50-server.cnf
        """
#
# These groups are read by MariaDB server.
# Use it for options that only the server (but not clients) should see

# this is read by the standalone daemon and embedded servers
[server]
#############################################

user = mysql
pid-file = /run/mysqld/mysqld.pid
socket = /run/mysqld/mysqld.sock
basedir = /usr
datadir = /var/lib/mysql
tmpdir = /tmp
lc-messages-dir = /usr/share/mysql
bind-address = 127.0.0.1
query_cache_size = 16M
log_error = /var/log/mysql/error.log

##############################################
# this is only for the mysqld standalone daemon
[mysqld]

#
# * Basic Settings
#

#user                    = mysql
pid-file                = /run/mysqld/mysqld.pid
basedir                 = /usr
#datadir                 = /var/lib/mysql
#tmpdir                  = /tmp

# Broken reverse DNS slows down connections considerably and name resolve is
# safe to skip if there are no "host by domain name" access grants
#skip-name-resolve

# Instead of skip-networking the default is now to listen only on
# localhost which is more compatible and is not less secure.
bind-address            = 127.0.0.1

#
# * Fine Tuning
#

#key_buffer_size        = 128M
#max_allowed_packet     = 1G
#thread_stack           = 192K
#thread_cache_size      = 8
# This replaces the startup script and checks MyISAM tables if needed
# the first time they are touched
#myisam_recover_options = BACKUP
#max_connections        = 100
#table_cache            = 64

#
# * Logging and Replication
#

# Note: The configured log file or its directory need to be created
# and be writable by the mysql user, e.g.:
# $ sudo mkdir -m 2750 /var/log/mysql
# $ sudo chown mysql /var/log/mysql

# Both location gets rotated by the cronjob.
# Be aware that this log type is a performance killer.
# Recommend only changing this at runtime for short testing periods if needed!
#general_log_file       = /var/log/mysql/mysql.log
#general_log            = 1

# When running under systemd, error logging goes via stdout/stderr to journald
# and when running legacy init error logging goes to syslog due to
# /etc/mysql/conf.d/mariadb.conf.d/50-mysqld_safe.cnf
# Enable this if you want to have error logging into a separate file
#log_error = /var/log/mysql/error.log
# Enable the slow query log to see queries with especially long duration
#log_slow_query_file    = /var/log/mysql/mariadb-slow.log
#log_slow_query_time    = 10
#log_slow_verbosity     = query_plan,explain
#log-queries-not-using-indexes
#log_slow_min_examined_row_limit = 1000

# The following can be used as easy to replay backup logs or for replication.
# note: if you are setting up a replica, see README.Debian about other
#       settings you may need to change.
#server-id              = 1
#log_bin                = /var/log/mysql/mysql-bin.log
expire_logs_days        = 10
#max_binlog_size        = 100M

#
# * SSL/TLS
#

# For documentation, please read
# https://mariadb.com/kb/en/securing-connections-for-client-and-server/
#ssl-ca = /etc/mysql/cacert.pem
#ssl-cert = /etc/mysql/server-cert.pem
#ssl-key = /etc/mysql/server-key.pem
#require-secure-transport = on

#
# * Character sets
#

# MySQL/MariaDB default is Latin1, but in Debian we rather default to the full
# utf8 4-byte character set. See also client.cnf
# character-set-server  = utf8mb4
# collation-server      = utf8mb4_general_ci

#
# * InnoDB
#
# InnoDB is enabled by default with a 10MB datafile in /var/lib/mysql/.
# Read the manual for more InnoDB related options. There are many!
# Most important is to give InnoDB 80 % of the system RAM for buffer use:
# https://mariadb.com/kb/en/innodb-system-variables/#innodb_buffer_pool_size
#innodb_buffer_pool_size = 8G
#######################################

innodb-file-format=barracuda
innodb-file-per-table=1
innodb-large-prefix=1
character-set-client-handshake = FALSE
character-set-server = utf8mb4
collation-server = utf8mb4_unicode_ci

#######################################
# this is only for embedded server
[embedded]

# This group is only read by MariaDB servers, not by MySQL.
# If you use the same .cnf file for MySQL and MariaDB,
# you can put MariaDB-only options here
[mariadb]

# This group is only read by MariaDB-10.11 servers.
# If you use the same .cnf file for MariaDB of different versions,
# use this group for options that older servers don't understand
[mariadb-10.11]
#######################################

[mysql]
default-character-set = utf8mb4

#####################################
#
# These groups are read by MariaDB server.
# Use it for options that only the server (but not clients) should see

# this is read by the standalone daemon and embedded servers
[server]
#############################################

user = mysql
pid-file = /run/mysqld/mysqld.pid
socket = /run/mysqld/mysql
        """

STEP 6 :  Restart MYSQL Server
        sudo service mysql restart

STEP 7 : install Redis
        sudo apt-get install redis-server -y

STEP 8 : install Node.js 18.X package
        sudo apt install curl -y
        curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
        source ~/.profile
        nvm install 18

STEP 10 install Yarn
        sudo apt-get install npm -y
        sudo npm install -g yarn

STEP 11 install wkhtmltopdf
        sudo apt-get install xvfb libfontconfig wkhtmltopdf -y

        Note: Install wkhtmltopdf (with patched qt)
                wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-2/wkhtmltox_0.12.6.1-2.jammy_amd64.deb
                sudo dpkg -i wkhtmltox_0.12.6.1-2.jammy_amd64.deb
                sudo apt install -f -y
                wkhtmltopdf --version
                        Output: wkhtmltopdf 0.12.6.1 (with patched qt)

STEP 12 install frappe-bench
        sudo -H pip3 install frappe-bench --break-system-packages
        bench --version

STEP 13 initilise the frappe bench & install frappe latest version
        bench init frappe-bench --frappe-branch version-15
        cd frappe-bench
        bench start

        ################  version - 14 ##################
        sudo apt update
        sudo add-apt-repository ppa:deadsnakes/ppa -y
        sudo apt update
        sudo apt install -y python3.10 python3.10-venv python3.10-dev

        python3.10 --version

        export PYTHON=python3.10

        python3.10 -m venv bench-py10-env
        source bench-py10-env/bin/activate

        pip install -U pip
        pip install frappe-bench

        bench init frappe-bench-v14 --frappe-branch version-14

        ################  version - 13 ##################





















