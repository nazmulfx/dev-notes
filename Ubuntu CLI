sudo apt update
sudo apt --fix-broken install
sudo dpkg -i mysql-workbench-community_8.0.40-1ubuntu24.04_amd64.deb

sudo apt install software_name










##############################################################
###################   Python Environment   ###################
##############################################################
sudo apt update
sudo apt install python3 python3-venv python3-dev
    - this will install latest version of python3 like python-3.12.1
    
sudo apt install python3.9 python3.9-venv python3.9-dev
    - this will install specific python version python3.9
    - error? means: Default Ubuntu apt doesn't have multiple python repository
        - sudo add-apt-repository ppa:deadsnakes/ppa (Deadsnakes PPA will add multiple python repo version for Ubuntu apt)
        - sudo apt update (after add Deadsnakes must update apt)

python3 -m venv env
    - Create a virtual environment
    # Activate the virtual environment
        For bash or sh:
            source venv/bin/activate
        For zsh:
            source venv/bin/activate
        For fish:
            source venv/bin/activate.fish

# Install the package
pip install mysql-connector

# After you're done, deactivate the virtual environment
deactivate

# check is the python running from env
which python
    will return path of python running like '/home/nazmul/campusx/env/bin/python'




################################################################
###################   Unbuntu Server Setup   ###################
################################################################

Step 1 - Installing python and nginx
    sudo apt install python3-pip python3-dev nginx

Step 2 - Creating a python virtual environment
    sudo apt install virtualenv 
    /////// or ///////
    sudo pip3 install virtualenv

    Note: source env/bin/activate => To activate env

Step 3 - Installing Django and gunicorn
    pip install django gunicorn

Step 4 - Setting up our Django project
    mkdir projectdir
    cd projectdir
    django-admin startproject textutils ~/projectdir

    cd textutils
    sudo nano settings.py
    Edit: ALLOWED_HOSTS = ['*'] 

    sudo ufw allow 8000
        Note: need to allow port 8000 if not allowed

    ~/projectdir/manage.py runserver 0.0.0.0:8000
    ///// or /////
    python3 manage.py runserver 0.0.0.0:8000

Step 5 - Configuring gunicorn
    gunicorn --bind 0.0.0.0:8000 textutils.wsgi
        Note: To test gunicorn is working


    deactivate
        Note: deactivate env to configure gunicorn


    sudo vim /etc/systemd/system/gunicorn.socket
    ///// or /////
    sudo nano /etc/systemd/system/gunicorn.socket
    """
[Unit]
Description=gunicorn socket

[Socket]
ListenStream=/run/gunicorn.sock

[Install]
WantedBy=sockets.target
    """


    sudo vim /etc/systemd/system/gunicorn.service
    ///// or /////
    sudo nano /etc/systemd/system/gunicorn.service
    '''
[Unit]
Description=gunicorn daemon
Requires=gunicorn.socket
After=network.target

[Service]
User={{ubuntu_username}}
Group=www-data
WorkingDirectory=/home/{{ubuntu_username}}/projectdir
ExecStart=/home/{{ubuntu_username}}/projectdir/env/bin/gunicorn \
        --access-logfile - \
        --workers 3 \
        --bind unix:/run/gunicorn.sock \
        {{project_name}}.wsgi:application

Restart=always
RestartSec=10s

[Install]
WantedBy=multi-user.target
    '''
    sudo systemctl start gunicorn.socket
    sudo systemctl enable gunicorn.socket

Step 6 - Configuring Nginx as a reverse proxy
    sudo vim /etc/nginx/sites-available/textutils
    ///// or /////
    sudo nano /etc/nginx/sites-available/textutils
    '''
server {
    listen 80;
    server_name {{domain_name}};

    location = /favicon.ico { access_log off; log_not_found off; }
    location /static/ {
        root /home/{{ubuntu_username}}/projectdir;
    }

    location / {
        include proxy_params;
        proxy_pass {{http://unix:/run/gunicorn.sock}};
    }
}
    '''

    sudo ln -s /etc/nginx/sites-available/textutils /etc/nginx/sites-enabled/

    sudo nginx -t
        Note: To test nginx configuration is ok or not.


    sudo service gunicorn restart
    sudo service nginx restart



###################################################################
###################   Frappe Production Setup   ###################
###################################################################

Step 1️⃣  : Install ansible & nginx
    sudo apt install ansible nginx

Setp 2️⃣ : Enable Production Mode
    cd /home/youruser/frappe-bench
    sudo bench setup production {{ubuntu_username}}

Setp 3️⃣ : Setup Supervisor to Keep Bench Running
    sudo apt update
    sudo apt install supervisor -y

    sudo systemctl enable supervisor
    sudo systemctl start supervisor

3️⃣ Configure Nginx as Reverse Proxy
    sudo bench setup nginx

    sudo ln -s /etc/nginx/sites-available/frappe-bench /etc/nginx/sites-enabled/
    sudo systemctl restart nginx

    


###################################################################
######################   Add User in Ubuntu   #####################
###################################################################

Create a New User (If Not Already Created)
    adduser frappe

Give Sudo Access
    usermod -aG sudo frappe

change user to frappe
    su - frappe
